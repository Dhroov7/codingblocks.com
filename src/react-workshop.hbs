<!DOCTYPE html>
<html lang="en">
<head>
    <meta name="robots" content="noindex,nofollow">
    <title>{{title}}</title>
    {{> head}}
</head>
<body class="scroll-assist">
{{> navbar}}
<div class="main-container">
    {{> slider}}
    <section>
        <div class="container">
            <div class="row">
                <div class="col-sm-10 col-sm-offset-1 text-center">
                    <h3 class="uppercase color-primary mb40 mb-xs-24">Overview</h3>
                    <p class="lead">
                    <strong><span style="font-size: 24px;">Learn the basics along with a hands-on experience with writing your very first app in React!<br></span><br><span style="font-size: 20px;">DAY 1:</span></strong></p>
<ul><li><p><strong>Introduction to React</strong></p><ul><li><p>What is React? Why is it just a view and not the complete MVC?</p></li><li><p>Virtual DOM diffing, how does it help and the general idea about it!</p></li><li><p>Setup using create-react-app.<br><br></p></li></ul></li><li><p>First React Component, Basic Component displaying a list of names</p><ul><li><p>Display the list of names of students in the class.<br><br></p></li></ul></li><li><p>Go back and look what is Webpack</p><ul><li><p>Eject the create-react-app and dive into the Webpack&nbsp;and Babel files.</p></li><li><p>We will not be diving into deep, since covering Webpack&nbsp;in itself can take a complete day!<br><br></p></li></ul></li><li><p>Babel and ES6 Syntax</p><ul><li><p>We will discuss what babel is and how it is helping in&nbsp;transpiling&nbsp;our ES6 code to ES5 code and why do we need to do it.</p></li><li><p>Moving on to new ES6 jargons and syntactic sugar which we can utilize like arrow functions, template literals, destructuring assignment, and class.<br><br></p></li></ul></li><li><p>Basics of JSX, states, and props</p><ul><li><p>Why JSX? What is JSX? The ideology behind it.</p></li><li><p>Props, how do we get props from parent and use of them?</p></li><li><p>State, what is a state? How is it different from class properties, and what should go in state and how does that effect in your re-rendering.<br><br></p></li></ul></li><li><p>The lifecycle of a React Component:</p><ul><li><p>Mounting:</p><ul><li><p>Constructor</p></li><li><p>Render</p></li><li><p>ComponentDidMount</p></li></ul></li><li><p>Updating</p><ul><li><p>ShouldComponentUpdate</p></li><li><p>Render</p></li><li><p>componentDidUpdate</p></li></ul></li><li><p>Unmounting<br></p><ul><li><p>componentWillUnMount<br><br></p></li></ul></li></ul></li></ul>
<p>The use case of above-given functions and when to use them in brief!<br><br><span style="font-size: 20px;">DAY 2:<br><br></span></p>
<ul><li>Starting to build an Application!</li></ul>
<p><strong>Description of Application :&nbsp;</strong>A multistep form Submission App!<br><br></p>
<p><strong><em>You will get a data structure like&nbsp;<a href="https://gist.github.com/garvitdelhi/9abbfb64341ed82317b028278e9827c0" target="_blank" data-saferedirecturl="https://www.google.com/url?q=https://gist.github.com/garvitdelhi/9abbfb64341ed82317b028278e9827c0&amp;source=gmail&amp;ust=1531996665743000&amp;usg=AFQjCNEgn04ZKc6ChkWzD6gRS3Ox6cbNkw">here</a>&nbsp;and you will have to make a UI with that data structure.</em></strong></p>
<p><strong><em>The above data structure is randomly generated using the script&nbsp;<a href="https://gist.github.com/garvitdelhi/9abbfb64341ed82317b028278e9827c0" target="_blank" data-saferedirecturl="https://www.google.com/url?q=https://gist.github.com/garvitdelhi/9abbfb64341ed82317b028278e9827c0&amp;source=gmail&amp;ust=1531996665743000&amp;usg=AFQjCNEgn04ZKc6ChkWzD6gRS3Ox6cbNkw">here</a>.</em></strong></p>
<p><strong><em>Idea is that we have a form that we need the users to fill.</em></strong></p>
<p><strong><em>This form is a multi-step form.</em></strong></p>
<p><strong><em>At every step, we take a few inputs and store them in the state.</em></strong></p>
<p><strong><em>Users can then click on a button which says next step and go to fill next step data.</em></strong></p>
<p><strong><em>Users can go back to edit previously submitted information.</em></strong></p>
<p><strong><em>Once they are done the userâ€™s response is submitted, a congratulations screen is shown.<br><br><br></em></strong></p>
<p><span style="font-size: 24px;"><strong>About the Speaker:<br><br></strong></span></p>
<p><span style="font-size: 20px;"><strong>Garvit Khatri
<br>Member Of Technical Staff II at Adobe<br><br></strong></span></p>
<p><em>Garvit Khatri, a software engineer, currently working with Adobe. Previously worked with Zomato for a couple of years a product which attracts over 250 million hits every month. An open source enthusiast, he was a GSoC student in 2015, mentor in 2016 and has continued to contribute to free and open source communities like KDE and CPython. He has presented at various regional and international conferences including FOSSASIA, QTCon, KDE Conf India.<br><br></em></p>
<p><strong><span style="font-size: 24px;">Date: 4th - 5th August 2018
<br>Timings: From 11:00 AM onwards. (Full day workshop)
<br>Venue: Coding Blocks Pitampura

                    </p>
                </div>
            </div>
        </div>
    </section>
    <section>
                                            <div class="text-center" id="register">
                                                <h3>REGISTRATIONS CLOSED</h3></div>
                                        </section>

   
    {{> review-course-section}}
    {{> map}}
    {{> footer}}
</div>
{{> scripts}}
</body>
</html>
